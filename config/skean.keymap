/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <250>; };
&mt { quick_tap_ms = <250>; };

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | UNDO | = |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | - | REDO |
//        | CAPS |  A  |  S  |  D/SHIFT  |  F  |  G  |   |  H  |  J   |  K/SHIFT  |  L  |  '  | TK |
//        | ESC |  Z/OPT  |  X  |  C  |  V/CMD  |  B  |   |  N  |  M/CMD   |  ,  |  .  |  //OPT  | ; |
//                           | TAB | SPC | RSE |   | LWR | BKSP | ENTER |
                        bindings = <
  &kp LG(Z) &kp EQUAL &kp Q &kp W &kp E &kp R &kp T         &kp Y  &kp U  &kp I  &kp O  &kp P  &kp MINUS &kp LG(LS(Z))
            &kp CAPS &kp A &kp S &mt LSHIFT D  &kp F &kp G        &kp H   &kp J  &mt LSHIFT K &kp L &kp SQT &none
            &kp ESC &mt LALT Z &kp X &kp C &mt LCMD V &kp B       &kp N &mt LCMD M  &kp COMMA &kp DOT &mt LALT FSLH &kp SEMI
                         &lt LWR TAB &kp SPACE &tog RSE &tog LWR &kp BKSP &lt RSE ENTER
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |COPY |  `  |  !  |  "  |  â‚¤  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  |  |PASTE |
//          |    |  1  |  2  |  3/SHIFT  |  4  |  5  |   |  6  |  7  |  8/SHIFT  |  9  |  0  |     |  
//          |    |  OPT |  # |    | CMD |    |   |  DEL |  CMD |    |  [  |  ] |   |
//                  | TAB | SPC | RSE |   | LWR | BKSP | ENTER |
                        bindings = <
   &kp LG(C) &kp GRAVE &kp EXCL &kp DQT &kp LS(3) &kp DLLR &kp PRCNT        &kp CARET &kp AMPS &kp STAR &kp LPAR &kp RPAR &kp NON_US_BSLH &kp LG(V)
                       &kp LCMD &kp N1  &kp N2 &mt LSHIFT N3 &kp N4   &kp N5         &kp N6  &kp N7 &mt LSHIFT N8   &kp N9   &kp N0   &none
                       &none &kp LALT &kp NON_US_HASH &none &kp LCTRL &none         &kp DEL &kp LCTRL &none &kp LBKT &kp RBKT &kp RCMD
                                  &lt LWR TAB &kp SPACE &tog RSE &tog LWR &kp BKSP &lt RSE ENTER
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |     |      |     |  UP | PREV| NEXT|VOL U|   |  /  |  7  |  8  |  9  |  -  |     |     |
//       | CMD | LEFT|DOWN |RIGHT|  PP |VOL D|   |  *  |  4  |5/SHFT|  6 |  +  |     |
//       |      | OPT |     |     |CMD | MUTE|   |  0  |  1  |  2   |  3 |  .  |     |
                        bindings = <
   &trans    &none  &none     &kp UP   &kp C_PREV &kp C_NEXT &kp C_VOL_UP       &kp KP_SLASH    &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_MINUS &none  &trans
          &kp LCMD &kp LEFT &kp DOWN &kp RIGHT  &kp C_PP   &kp C_VOL_DN       &kp KP_MULTIPLY &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_PLUS  &none
          &none &kp LALT   &none     &none        &kp LCMD  &kp C_MUTE        &kp KP_N0  &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_DOT &none
                                     &lt LWR TAB &kp SPACE &tog RSE &tog LWR &kp BKSP &lt RSE ENTER
                        >;
                };
                adjust_layer {
// -----------------------------------------------------------------------------------------
// | RST | BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR | RST |
//       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
//       |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                          |     |     |     |   |     |     |     |
                        bindings = <
   &reset &bootloader  &none        &none        &none        &none        &none              &none        &none        &none        &none        &none         &bootloader &reset
          &bt BT_CLR   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4       &bt BT_SEL 4 &bt BT_SEL 3 &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0  &bt BT_CLR
          &none        &none        &none        &none        &none        &none              &none        &none        &none        &none        &none         &none
                                                                    &trans &none &trans   &trans &none &trans
                        >;
                };
        };
};
